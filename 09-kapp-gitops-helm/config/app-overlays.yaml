apiVersion: v1
kind: ConfigMap
metadata:
  name: hello-kubernetes-overlays
  namespace: default
  annotations:
    kapp.k14s.io/change-group: "hello-kubernetes/app"
    kapp.k14s.io/change-rule.create-order: "upsert after upserting hello-kubernetes/rbac"
    kapp.k14s.io/change-rule.delete-order: "delete before deleting hello-kubernetes/rbac"
data:
  fix-ns.yaml: |
    #@ load("@ytt:data", "data")
    #@ load("@ytt:overlay", "overlay")
    #@overlay/match by=overlay.subset({"metadata": {"labels": { "app.kubernetes.io/name": "hello-kubernetes"}}}),expects="1+"
    ---
    metadata:
      #@overlay/match missing_ok=True
      namespace: #@ "hello-kubernetes-{}".format(data.values.env.name)
    ---
    apiVersion: v1
    kind: Namespace
    metadata:
      name: #@ "hello-kubernetes-{}".format(data.values.env.name)
  add-ingress.yaml: |
    #@ load("@ytt:data", "data")
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: ingress
      namespace: #@ "hello-kubernetes-{}".format(data.values.env.name)
    spec:
      rules:
      - host: #@ "hello-kubernetes.{}".format(data.values.env.domain)
        http:
          paths:
          - pathType: ImplementationSpecific
            path: /
            backend:
              service:
                name: hello-kubernetes-hello-kubernetes
                port:
                  number: 80
